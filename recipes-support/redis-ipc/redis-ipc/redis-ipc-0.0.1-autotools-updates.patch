diff --git a/autogen.sh b/autogen.sh
index 304d3d6..3861209 100755
--- a/autogen.sh
+++ b/autogen.sh
@@ -1,39 +1,9 @@
-#! /bin/sh
-
-srcdir=`dirname $0`
-test -z "$srcdir" && srcdir=.
-
-THEDIR="`pwd`"
-cd "$srcdir"
-DIE=0
-
-abort () {
-    echo "$1 not found or command failed. Aborting!"
-    exit 1
+#!/bin/sh
+# you can either set the environment variables AUTOCONF, AUTOHEADER, AUTOMAKE,
+# ACLOCAL, AUTOPOINT and/or LIBTOOLIZE to the right versions, or leave them
+# unset and get the defaults
+
+autoreconf --verbose --force --install || {
+ echo 'autogen.sh failed';
+ exit 1;
 }
-
-set -x
-libtoolize --ltdl --force --copy || abort "libtoolize"
-aclocal || abort "aclocal"
-autoheader || abort "autoheader"
-automake --gnu --add-missing --copy || abort "automake"
-autoconf || abort "autoconf"
-
-if test -z "$*"; then
-        echo "I am going to run ./configure with no arguments - if you wish "
-        echo "to pass any to it, please specify them on the $0 command line."
-fi
-
-cd "$THEDIR"
-
-$srcdir/configure "$@" || abort "configure"
-
-set +x
-
-echo "Now type:"
-echo
-echo "make"
-echo "make install"
-echo
-echo "have fun."
-
diff --git a/configure.ac b/configure.ac
index 595873b..a7de51f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -8,28 +8,24 @@ AC_CONFIG_MACRO_DIR([m4])
 m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
 
 AM_INIT_AUTOMAKE([foreign subdir-objects])
-
-if test "x$prefix" = "xNONE"; then
-        prefix=$ac_default_prefix
-fi
-if test "x$exec_prefix" = "xNONE"; then
-        exec_prefix='${prefix}'
-fi
-
 AC_CONFIG_HEADERS([config.h])
 
 AM_PROG_AR
 LT_PREREQ([2.2.6])
-LT_CONFIG_LTDL_DIR([libltdl])
-LT_INIT([dlopen])
-LTDL_INIT([subproject])
+#LT_CONFIG_LTDL_DIR([libltdl])
+#LT_INIT([dlopen])
+#LTDL_INIT([subproject])
+LT_INIT
 
 AM_MAINTAINER_MODE([enable])
 
 AC_PROG_CC
+AM_PROG_CC_STDC
+AC_C_CONST
 AC_PROG_CXX
 AC_PROG_INSTALL
 AC_PROG_MAKE_SET
+AM_PROG_LIBTOOL
 
 # Checks for libraries.
 
@@ -49,25 +45,33 @@ AC_CHECK_FUNCS([memset strdup])
 
 # Check for hiredis and json-c
 JSON_C_MIN_VERSION="0.9"
+HIREDIS_MIN_VERSION="0.10"
 
-PKG_CHECK_MODULES(JSONC, libjson-c >= $JSON_C_MIN_VERSION, ,
-  AC_CHECK_HEADER(json-c/json.h, [JSONC_LIBS="-ljson-c"], [json-c=no])
-  AC_CHECK_HEADER(json-c/json.h, [JSONC_CFLAGS="-I$includedir"
-                                      JSONC_LIBS="-L$libdir -ljson-c"], [json-c=no])
+PKG_CHECK_MODULES(JSONC, [
+  json-c >= $JSON_C_MIN_VERSION
+], [
   AC_SUBST([JSONC_CFLAGS])
   AC_SUBST([JSONC_LIBS])
-)
-
-PKG_CHECK_MODULES(HIREDIS, libhiredis, ,
-  AC_CHECK_HEADER(hiredis/hiredis.h, [HIREDIS_LIBS="-lhiredis"], [hiredis=no])
-  AC_CHECK_HEADER(hiredis/hiredis.h, [HIREDIS_CFLAGS="-I$includedir"
-                                      HIREDIS_LIBS="-L$libdir -lhiredis"], [hiredis=no])
+], [
+  AC_MSG_ERROR([
+      You need to install or upgrade the json-c development
+      packages on your system. On debian-based systems this is libjson-c-dev.
+      The minimum version required is $JSON_C_MIN_VERSION.
+  ])
+])
+
+PKG_CHECK_MODULES(HIREDIS, [
+  hiredis >= $HIREDIS_MIN_VERSION
+], [
   AC_SUBST([HIREDIS_CFLAGS])
   AC_SUBST([HIREDIS_LIBS])
-)
-#[
-#  AC_MSG_ERROR(libHIREDIS not found)
-#])
+], [
+  AC_MSG_ERROR([
+      You need to install or upgrade the hiredis development
+      packages on your system. On debian-based systems this is hiredis-dev.
+      The minimum version required is $HIREDIS_MIN_VERSION.
+  ])
+])
 
 AC_ARG_ENABLE(debug,
               [  --enable-debug      Enable debugging code.],, enable_debug="no")
@@ -79,7 +83,6 @@ AC_ARG_ENABLE(gcov,
               [  --enable-gcov       Enable coverage profiling (default: no)]
               ,,enable_gcov="no")
 
-
 enable_value()
 {
         if test "x$1" = "xyes" ; then
@@ -108,4 +111,3 @@ AC_CONFIG_FILES([Makefile \
                  test/Makefile])
 
 AC_OUTPUT
-
diff --git a/src/Makefile.am b/src/Makefile.am
index 6e8fcac..fa3abae 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -8,5 +8,6 @@ include_HEADERS = redis_ipc.h
 libredis_ipc_la_CPPFLAGS = -I$(includedir)
 libredis_ipc_la_CFLAGS = -Wall -std=gnu99 $(HIREDIS_CFLAGS) $(JSONC_CFLAGS)
 libredis_ipc_la_LIBADD = $(HIREDIS_LIBS) $(JSONC_LIBS)
+libredis_ipc_la_LDFLAGS = -Wl,--hash-style=gnu $(HIREDIS_LDFLAGS) $(JSONC_LDFLAGS)
 
 
diff --git a/src/redis_ipc.c b/src/redis_ipc.c
index 84d7c2a..3331c99 100644
--- a/src/redis_ipc.c
+++ b/src/redis_ipc.c
@@ -9,6 +9,9 @@
 #include <sys/time.h>
 #include <json-c/json.h>
 #include <hiredis/hiredis.h>
+#if HAVE_CONFIG_H
+#include <config.h>
+#endif
 #include "redis_ipc.h"
 
 #define safe_free(ptr) { if (ptr) free(ptr); ptr = NULL; }
@@ -207,7 +210,11 @@ int get_debug_verbosity()
 //@@@@ FIXME: debug will be dynamically configurable from a setting or config file
 int stderr_debug_is_enabled()
 {
+#if ENABLE_DEBUG
     return 1;
+#else
+    return 0;
+#endif
 }
 
 // check for errors in redis command execution;
diff --git a/test/Makefile.am b/test/Makefile.am
index 5493edc..a73edc0 100644
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -1,4 +1,4 @@
-AM_CPPFLAGS    = -I$(top_srcdir)/inc -I$(top_srcdir)/src -I$(includedir)
+AM_CPPFLAGS    = -I$(top_srcdir)/inc -I$(top_srcdir)/src
 
 LIBREDISIPC = $(top_srcdir)/src/.libs/libredis_ipc.la
 
@@ -8,28 +8,30 @@ BUILT_TESTS = command_result_test \
               settings_status_test \
               pub_sub_test
 
+XFAIL_TESTS = command_result_test
+
 #TESTS = $(BUILT_TESTS) tests/runtests.sh
 TESTS = $(check_PROGRAMS)
 check_PROGRAMS = $(BUILT_TESTS)
 include_HEADERS = $(top_srcdir)/inc/json.hh
 
 command_result_test_SOURCES = command_result_test.c
-command_result_test_LDADD = -lhiredis -ljson-c $(LIBREDISIPC) -lpthread
+command_result_test_LDADD = $(HIREDIS_LIBS) $(JSONC_LIBS) $(LIBREDISIPC) -lpthread
 command_result_test_LDFLAGS = -Wl,--hash-style=gnu -no-install
 
 json_test_SOURCES = json_test.cpp
-json_test_LDADD = -lhiredis -ljson-c $(LIBREDISIPC) -lpthread
+json_test_LDADD = $(HIREDIS_LIBS) $(JSONC_LIBS) $(LIBREDISIPC) -lpthread
 json_test_LDFLAGS = -Wl,--hash-style=gnu -no-install
 
 multithread_test_SOURCES = multithread_test.c
-multithread_test_LDADD = -lhiredis -ljson-c $(LIBREDISIPC) -lpthread
+multithread_test_LDADD = $(HIREDIS_LIBS) $(JSONC_LIBS) $(LIBREDISIPC) -lpthread
 multithread_test_LDFLAGS = -Wl,--hash-style=gnu -no-install
 
 pub_sub_test_SOURCES = pub_sub_test.c
-pub_sub_test_LDADD = -lhiredis -ljson-c $(LIBREDISIPC) -lpthread
+pub_sub_test_LDADD = $(HIREDIS_LIBS) $(JSONC_LIBS) $(LIBREDISIPC) -lpthread
 pub_sub_test_LDFLAGS = -Wl,--hash-style=gnu -no-install
 
 settings_status_test_SOURCES = settings_status_test.c
-settings_status_test_LDADD = -lhiredis -ljson-c $(LIBREDISIPC) -lpthread
+settings_status_test_LDADD = $(HIREDIS_LIBS) $(JSONC_LIBS) $(LIBREDISIPC) -lpthread
 settings_status_test_LDFLAGS = -Wl,--hash-style=gnu -no-install
 
