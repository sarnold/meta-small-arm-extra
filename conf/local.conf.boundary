#
# This file is your local configuration file and is where all local user settings
# are placed. The comments in this file give some guide to the options a new user
# to the system might want to change but pretty much any configuration option can
# be set in this file. More adventurous users can look at local.conf.extended
# which contains other examples of configuration which can be placed in this file
# but new users likely won't need any of them initially.
#
# Lines starting with the '#' character are commented out and in some cases the
# default values are provided as comments to show people example syntax. Enabling
# the option is a question of removing the # character and making any change to the
# variable as required.

#
# Machine Selection
#
# You need to select a specific machine to target the build with. There are a selection
# of emulated machines available which can boot and run in the QEMU emulator:
#
#MACHINE ?= "qemuarm"
#MACHINE ?= "qemuarm64"
#MACHINE ?= "qemumips"
#MACHINE ?= "qemumips64"
#MACHINE ?= "qemuppc"
#MACHINE ?= "qemux86"
#MACHINE ?= "qemux86-64"
#
# This sets the default machine to be qemux86 if no other machine is selected:
#MACHINE ??= "qemux86"

#
# Where to place downloads
#
# During a first build the system will download many different source code tarballs
# from various upstream projects. This can take a while, particularly if your network
# connection is slow. These are all stored in DL_DIR. When wiping and rebuilding you
# can preserve this directory to speed up this part of subsequent builds. This directory
# is safe to share between multiple builds on the same machine too.
#
# The default is a downloads directory under TOPDIR which is the build directory.
#
#DL_DIR ?= "${TOPDIR}/downloads"

#
# Where to place shared-state files
#
# BitBake has the capability to accelerate builds based on previously built output.
# This is done using "shared state" files which can be thought of as cache objects
# and this option determines where those files are placed.
#
# You can wipe out TMPDIR leaving this directory intact and the build would regenerate
# from these files if no changes were made to the configuration. If changes were made
# to the configuration, only shared state files where the state was still valid would
# be used (done using checksums).
#
# The default is a sstate-cache directory under TOPDIR.
#
#SSTATE_DIR ?= "${TOPDIR}/sstate-cache"

#
# Where to place the build output
#
# This option specifies where the bulk of the building work should be done and
# where BitBake should place its temporary files and output. Keep in mind that
# this includes the extraction and compilation of many applications and the toolchain
# which can use Gigabytes of hard disk space.
#
# The default is a tmp directory under TOPDIR.
#
#TMPDIR = "${TOPDIR}/tmp"


#
# Package Management configuration
#
# This variable lists which packaging formats to enable. Multiple package backends
# can be enabled at once and the first item listed in the variable will be used
# to generate the root filesystems.
# Options are:
#  - 'package_deb' for debian style deb files
#  - 'package_ipk' for ipk files are used by opkg (a debian style embedded package manager)
#  - 'package_rpm' for rpm style packages
# E.g.: PACKAGE_CLASSES ?= "package_rpm package_deb package_ipk"
# We default to ipk:

PACKAGE_CLASSES ?= "package_ipk"

#
# SDK target architecture
#
# This variable specifies the architecture to build SDK items for and means
# you can build the SDK packages for architectures other than the machine you are
# running the build on (i.e. building i686 packages on an x86_64 host).
# Supported values are i686 and x86_64
#SDKMACHINE ?= "i686"

#
# Extra image configuration defaults
#
# The EXTRA_IMAGE_FEATURES variable allows extra packages to be added to the generated
# images. Some of these options are added to certain image types automatically. The
# variable can contain the following options:
#  "dbg-pkgs"       - add -dbg packages for all installed packages
#                     (adds symbol information for debugging/profiling)
#  "dev-pkgs"       - add -dev packages for all installed packages
#                     (useful if you want to develop against libs in the image)
#  "ptest-pkgs"     - add -ptest packages for all ptest-enabled packages
#                     (useful if you want to run the package test suites)
#  "tools-sdk"      - add development tools (gcc, make, pkgconfig etc.)
#  "tools-debug"    - add debugging tools (gdb, strace)
#  "eclipse-debug"  - add Eclipse remote debugging support
#  "tools-profile"  - add profiling tools (oprofile, lttng, valgrind)
#  "tools-testapps" - add useful testing tools (ts_print, aplay, arecord etc.)
#  "debug-tweaks"   - make an image suitable for development
#                     e.g. ssh root access has a blank password
# There are other application targets that can be used here too, see
# meta/classes/image.bbclass and meta/classes/core-image.bbclass for more details.
# We default to enabling the debugging tweaks.
#EXTRA_IMAGE_FEATURES ?= "debug-tweaks"

DISTRO = "vctlabs"

# adjust machine features from meta-ti to include keyboard
MACHINE_FEATURES = "keyboard apm usbgadget usbhost vfat rtc ext2 screen alsa ethernet"

# this should pull in xuser-account package and start X correctly
BBMASK ?= ".*/meta-oe/recipes-graphics/xserver-nodm-init/"
#PREFERRED_VERSION_xserver-nodm-init = "1.0"
ROOTLESS_X = "1"

CORE_IMAGE_EXTRA_INSTALL += "\
    kernel-modules \
    libcgroup \
    zram \
    nano \
    vim \
    vim-vimrc \
    vim-syntax \
    ntp \
    ltp \
    git \
    rsync \
    bash \
    screen \
    pax-utils \
    pps-tools \
    mtd-utils \
    devmem2 \
    sysfsutils \
    spitools \
    i2c-tools \
    usbutils \
    distro-feed-configs \
    cpufrequtils \
    gkrellmd \
    sqlite3 \
    python-sqlite3 \
    python-sqlite3-tests \
    python-modules \
    python-misc \
    python-pyyaml \
    python-git \
    python-apsw \
    neobunch \
    python-evdev \
    libevdev \
    python-redis \
    redis \
    lighttpd \
    lighttpd-module-cgi \
    lighttpd-module-alias \
    lighttpd-module-status \
    lighttpd-module-setenv \
    lighttpd-module-compress \
    lighttpd-module-redirect \
    python-reportlab \
    python-pillow \
    perl \
    perl-misc \
    perl-modules \
    ghostscript \
    poppler \
    qpdf \
    cups \
    pycups \
    cups-filters \
    cups-filters-gst \
    cups-filters-data \
    alsa-lib \
    alsa-tools \
    alsa-state \
    alsa-utils \
    alsa-utils-scripts \
    ${BRINGUP} \
    ${DEV_TOOLS} \
    ${X11} \
    ${TOUCH} \
    ${QT5} \
"

BRINGUP = " \
    tzdata \
    iw \
    bonnie++ \
    hdparm \
    iozone3 \
    iperf \
    lmbench \
    rt-tests \
    evtest \
    bc \
    memtester \
"

X11 = " \
    localedef \
    libx11-locale \
    xserver-xf86-config \
    xorg-minimal-fonts \
    xkeyboard-config \
    setxkbmap \
    xmodmap \
    xrdb \
"

X11_EXTRA = " \
    packagegroup-base-apm \
    packagegroup-fonts-truetype-core \
    lxdm \
    libxi \
    libxtst \
    rgb \
    xprop \
    xterm \
"

XFCE = " \
    packagegroup-xfce-extended \
    packagegroup-xfce-multimedia \
"

TOUCH = "\
    tslib-conf \
    tslib-tests \
    tslib-calibrate \
    tslib \
    evtest \
    dbus \
"

# note: qt5-opengles2-test fails to compile with mesa as GL provider
QT5 = "\
    packagegroup-qt5-qtcreator-debug \
    qtbase \
    qtbase-tools \
    qtbase-plugins \
    qtwebkit \
    qtwebkit-qmlplugins \
    qtwebkit-examples \
    qtwebkit-examples-examples \
    qt5-demo-extrafiles \
    cinematicexperience \
    qt5everywheredemo \
    qt5ledscreen \
    qt5nmapper \
    qt-webkit-kiosk \
    gstreamer \
    cairo \
    pango \
    fontconfig \
    freetype \
"

DEV_TOOLS = "\
    diffutils \
    python3-docutils \
    python-pyserial \
    python-pyusb \
    python-pip \
    guile \
    bison \
    flex \
    yasm \
    gdb \
"

DEFAULT_TEST_SUITES_remove = "connman"

#BBMASK = "meta-fsl-arm/browser-layer/recipes-browser/chromium/"
#BBMASK .= "|.*meta-freescale/recipes-graphics/"
BBMASK .= "|.*meta-boundary/recipes-browser/chromium/"
BBMASK .= "|.*meta-freescale/recipes-multimedia/gstreamer/"

# epiphany needs gnome-keyring, versions out of sync (poky/meta-oe is old)

IMAGE_FEATURES += "splash ssh-server-openssh package-management x11 x11-base"
#IMAGE_FEATURES += "splash ssh-server-openssh package-management"

EXTRA_IMAGE_FEATURES = "debug-tweaks ptest-pkgs tools-sdk tools-debug tools-testapps"

#LOCALE_UTF8_ONLY = "1"
#IMAGE_LINGUAS = "en-us en-gb"

#BB_NUMBER_THREADS = "4"
#PARALLEL_MAKE = "-j5"

MACHINE = "nitrogen6x"

# this is needed for building morty and up on hardened server (eg, Gentoo)
GCCVERSION = "5.4%"
SDKGCCVERSION = "${GCCVERSION}"
BINUVERSION = "2.27%"
GDBVERSION = "7.11%"
GLIBCVERSION = "2.24"

# this is needed if not using yocto bsp beaglebone machine config
# see also extra u-boot settings in bbappend
#IMAGE_BOOT_FILES = "u-boot.${UBOOT_SUFFIX} MLO"

IMAGE_FSTYPES = "tar.bz2 ext3 sdcard"

PREFERRED_PROVIDER_virtual/kernel = "linux-boundary"
#PREFERRED_VERSION_linux-bb-kernel = "4.1%"
#PREFERRED_PROVIDER_virtual/kernel = "linux-fslc"
#PREFERRED_VERSION_linux-fslc = "4.8%"

PREFERRED_PROVIDER_virtual/bootloader = "u-boot-boundary"
#PREFERRED_PROVIDER_virtual/bootloader = "u-boot"
#PREFERRED_VERSION_virtual/bootloader = "2016.03%"

VIRTUAL-RUNTIME_dev_manager = "udev"
VIRTUAL-RUNTIME_login_manager = "busybox"
VIRTUAL-RUNTIME_init_manager = "sysvinit"
VIRTUAL-RUNTIME_initscripts = "initscripts"
VIRTUAL-RUNTIME_keymaps = "keymaps"

## need this until I untangle the open source bits from the graphics blobs
## cannot set to mesa or just fb yet
ACCEPT_FSL_EULA = "1"
#PREFERRED_PROVIDER_virtual/egl_nitrogen6x = "mesa"
#PREFERRED_PROVIDER_virtual/libgl_nitrogen6x = "mesa"
#PREFERRED_PROVIDER_virtual/libgles1_nitrogen6x = "mesa"
#PREFERRED_PROVIDER_virtual/libgles2_nitrogen6x = "mesa"
PREFERRED_PROVIDER_virtual/xserver = "xserver-xorg"
#XSERVER_DRIVER = "xf86-video-fbdev"

PREFERRED_PROVIDER_jpeg = "libjpeg-turbo"
PREFERRED_PROVIDER_jpeg-native = "libjpeg-turbo-native"

PACKAGECONFIG_pn-cups = "acl pam"
PACKAGECONFIG_pn-poppler = "jpeg png tiff curl"
PACKAGECONFIG_pn-cups-filters = "jpeg png tiff dbus"

PACKAGECONFIG_pn-openbox = "xrandr xcursor startup-notification"
PACKAGECONFIG_pn-libxfce4ui = "gladeui startup-notification"
PACKAGECONFIG_pn-vim = "acl gtkgui x11"

DL_DIR = "/home/sarnold/shared/downloads"
SSTATE_DIR = "/home/sarnold/shared/fsl/sstate-cache"
PERSISTENT_DIR = "/home/sarnold/shared/fsl"

INHERIT += "rm_work"
INHERIT += "toaster"

# enable the PR service
PRSERV_HOST = "localhost:0"
INHERIT += "buildhistory"
BUILDHISTORY_COMMIT = "1"

# need this for real-time audio (includes RT_GROUP_SCHED)
KERNEL_ENABLE_CGROUPS = "1"

# try out java/fortran support
#JAVA = ",java"
#JAVA_arm = ",java"
FORTRAN = ",fortran"
FORTRAN_forcevariable = ",fortran"
RUNTIMETARGET_append_pn-gcc-runtime = " libquadmath"

# possible values are internal or external
CUSTOM_FEED_CONFIG = "internal"

# set internal feed URL
CUSTOM_FEED_URL = "slarti"

#LICENSE_FLAGS_WHITELIST = "\
#  commercial_gst-fluendo-mp3 \
#  commercial_gst-openmax \
#  commercial_gst-plugins-ugly \
#  commercial \
#  commercial_lame \
#  commercial_libmad \
#  commercial_libomxil \
#  commercial_mpeg2dec \
#  commercial_qmmp \
#"

DISTRO_FEATURES_append = " pam udev x11 pulseaudio "
#DISTRO_FEATURES_BACKFILL_CONSIDERED = "multiarch pulseaudio systemd"
# need to allow pulseaudio for epiphany  :/
DISTRO_FEATURES_BACKFILL_CONSIDERED = "multiarch systemd"


# Additional image features
#
# The following is a list of additional classes to use when building images which
# enable extra features. Some available options which can be included in this variable
# are:
#   - 'buildstats' collect build statistics
#   - 'image-mklibs' to reduce shared library files size for an image
#   - 'image-prelink' in order to prelink the filesystem image
#   - 'image-swab' to perform host system intrusion detection
# NOTE: if listing mklibs & prelink both, then make sure mklibs is before prelink
# NOTE: mklibs also needs to be explicitly enabled for a given image, see local.conf.extended
# image-prelink disabled for now due to issues with IFUNC symbol relocation
USER_CLASSES ?= "buildstats image-mklibs"


#
# Runtime testing of images
#
# The build system can test booting virtual machine images under qemu (an emulator)
# after any root filesystems are created and run tests against those images. To
# enable this uncomment this line. See classes/testimage(-auto).bbclass for
# further details.
#TEST_IMAGE = "1"
#
# Interactive shell configuration
#
# Under certain circumstances the system may need input from you and to do this it
# can launch an interactive shell. It needs to do this since the build is
# multithreaded and needs to be able to handle the case where more than one parallel
# process may require the user's attention. The default is iterate over the available
# terminal types to find one that works.
#
# Examples of the occasions this may happen are when resolving patches which cannot
# be applied, to use the devshell or the kernel menuconfig
#
# Supported values are auto, gnome, xfce, rxvt, screen, konsole (KDE 3.x only), none
# Note: currently, Konsole support only works for KDE 3.x due to the way
# newer Konsole versions behave
#OE_TERMINAL = "auto"
# By default disable interactive patch resolution (tasks will just fail instead):
PATCHRESOLVE = "noop"

#
# Disk Space Monitoring during the build
#
# Monitor the disk space during the build. If there is less that 1GB of space or less
# than 100K inodes in any key build location (TMPDIR, DL_DIR, SSTATE_DIR), gracefully
# shutdown the build. If there is less that 100MB or 1K inodes, perform a hard abort
# of the build. The reason for this is that running completely out of space can corrupt
# files and damages the build in ways which may not be easily recoverable.
# It's necesary to monitor /tmp, if there is no space left the build will fail
# with very exotic errors.
BB_DISKMON_DIRS = "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K \
    ABORT,/tmp,10M,1K"

#
# Shared-state files from other locations
#
# As mentioned above, shared state files are prebuilt cache data objects which can
# used to accelerate build time. This variable can be used to configure the system
# to search other mirror locations for these objects before it builds the data itself.
#
# This can be a filesystem directory, or a remote url such as http or ftp. These
# would contain the sstate-cache results from previous builds (possibly from other
# machines). This variable works like fetcher MIRRORS/PREMIRRORS and points to the
# cache locations to check for the shared objects.
# NOTE: if the mirror uses the same structure as SSTATE_DIR, you need to add PATH
# at the end as shown in the examples below. This will be substituted with the
# correct path within the directory structure.
#SSTATE_MIRRORS ?= "\
#file://.* http://someserver.tld/share/sstate/PATH;downloadfilename=PATH \n \
#file://.* file:///some/local/dir/sstate/PATH"


#
# Qemu configuration
#
# By default qemu will build with a builtin VNC server where graphical output can be
# seen. The two lines below enable the SDL backend too. By default libsdl-native will
# be built, if you want to use your host's libSDL instead of the minimal libsdl built
# by libsdl-native then uncomment the ASSUME_PROVIDED line below.
#PACKAGECONFIG_append_pn-qemu-native = " sdl"
#PACKAGECONFIG_append_pn-nativesdk-qemu = " sdl"
ASSUME_PROVIDED += "qemu-native libsdl-native"

# CONF_VERSION is increased each time build/conf/ changes incompatibly and is used to
# track the version of this file when it was generated. This can safely be ignored if
# this doesn't mean anything to you.
CONF_VERSION = "1"
